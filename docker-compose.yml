version: '3.8'

services:
  postgres:
    image: postgres
    container_name: db_molecules_fastapi
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - ${DB_PORT}:5432
    restart: always

  web1:
    build: .
    image: app
    environment:
      SERVER_ID: SERVER-1
      DB_HOST: postgres
    depends_on:
      - postgres
    entrypoint: ["/bin/sh", "-c", "alembic revision --autogenerate && alembic upgrade head && fastapi run src/main.py"]

  web2:
    image: app
    environment:
      SERVER_ID: SERVER-2
      DB_HOST: postgres
    depends_on:
      - postgres
      - web1

# The reason why I did not use the build option for web2 is that It will result
# in the creation of a new image for web2, which is not really a problem(memory-wise layer architecture saves space),
# but I thought it would be better to use have just one image

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
    depends_on:
      - web1
      - web2
